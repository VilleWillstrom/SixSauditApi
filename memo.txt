
How to make models directly from database using sqlacodegen

Make sure to use Python 3.10 or earlier, won't work on python 3.11 -->

Install requirements in requirements file
    Needed:
        fastapi
        uvicorn[standard]
        mysql-connector-python
        sqlalchemy

Start up venv if not started already

Run pip install sqlacodegen

Run sqlacodegen mysql+mysqlconnector://root@localhost/sixsaudit --outfile models.py
    Where address should point to existing and running database server

If no errors, there should now be models.py file that includes model classes of all database data

Now upgrade sqlalchemy to latest!
    pip install sqlalchemy --upgrade

Add database connection to beginning od models.py, it's better though to use CONNECTION_STRING at .env
    engine = create_engine('mysql+mysqlconnector://root@localhost/sixsaudit')
    SessionLocal = sessionmaker(autoflush=False, autocommit=False, bind=engine)


    def get_db():
        db = SessionLocal()
        try:
            yield db
        finally:
            db.close()


If moving db to postgre, change:
main.py:

if __name:: == '__main__':
    models.metadata.create_all()

install psychopg2 in requirements for postgre connector and change connection string to create all

Now it will create database based on models


Sessions from https://jordanisaacs.github.io/fastapi-sessions/guide/getting_started/

csrf = cross site request forcer

migrations are kind of version control for database
Using migratioins with alembic

cmd alembic revision -m "add city column in location table"
    alembic upgrade head (head = latest, or specific revision id i.e. 7764d9f356f0)
    alembic downgrade -3 (-3 = 3 versions back, or specific revision id i.e. 7764d9f356f0)

    check file alembic/versions/7764d9f356f0_add_city_column_in_location_table

    also remember to make new model class
